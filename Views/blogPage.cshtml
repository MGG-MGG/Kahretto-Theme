@{
    Layout = null;
}
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core
@using Newtonsoft.Json

@{
    var rootNodes = Umbraco.ContentAtRoot();
    var homePage = Umbraco.ContentAtRoot().FirstOrDefault(x => x.ContentType.Alias == "homePage");
    var productsPage = homePage != null ? homePage.Children().FirstOrDefault(x => x.ContentType.Alias == "urunkategorisi") : null;
    var products = productsPage != null ? productsPage.Children().Where(x => x.ContentType.Alias == "urun") : Enumerable.Empty<IPublishedContent>();
}

@functions {
    public static string RemoveHtmlTags(string input)
    {
        if (string.IsNullOrEmpty(input))
            return input;
        return System.Text.RegularExpressions.Regex.Replace(input, "<[^>]+>|data-end=\"[^\"]+\"", String.Empty).Trim();
    }
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title class="notranslate">Kahretto - Menü</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=SoDo+Sans:wght@400;700&display=swap" rel="stylesheet">
    <link href="/css/site.css" rel="stylesheet" />
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <span class="notranslate protect-kahretto">Kahretto</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/#bilgi1">KURUMSAL</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/blog#products">MENÜ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/sss">SSS</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/iletisim">İLETİŞİM</a>
                    </li>
                    <li class="nav-item language-switcher">
                        <a href="javascript:void(0)" id="languageToggle" class="nav-link">
                            <i class="fas fa-globe"></i>
                        </a>
                        <div id="languageMenu" class="language-menu">
                            <a href="#" data-lang="tr">Türkçe</a>
                            <a href="#" data-lang="en">English</a>
                            <a href="#" data-lang="de">Deutsch</a>
                            <a href="#" data-lang="fr">Français</a>
                            <a href="#" data-lang="es">Español</a>
                        </div>
                        <div id="google_translate_element" style="display: none;"></div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <script type="text/javascript">
        let currentLang = localStorage.getItem('selectedLanguage') || 'tr';
        document.cookie = `googtrans=/tr/${currentLang}; path=/`;
        function googleTranslateElementInit() {
            new google.translate.TranslateElement({
                pageLanguage: 'tr',
                includedLanguages: 'tr,en,de,fr,es',
                autoDisplay: false,
                multilanguagePage: true
            }, 'google_translate_element');
            const protectKahretto = () => {
                const kahrettoElements = document.querySelectorAll('.protect-kahretto');
                kahrettoElements.forEach(element => {
                    if (element.innerText !== 'Kahretto') {
                        element.innerText = 'Kahretto';
                    }
                });
            };
            setTimeout(() => {
                const translateSelect = document.querySelector('#google_translate_element select.goog-te-combo');
                if (translateSelect) {
                    translateSelect.value = currentLang;
                    translateSelect.dispatchEvent(new Event('change'));
                }
            }, 1000);
            document.addEventListener('DOMSubtreeModified', protectKahretto);
        }
        document.addEventListener('DOMContentLoaded', function () {
            const languageToggle = document.getElementById('languageToggle');
            const languageMenu = document.getElementById('languageMenu');
            const languageLinks = languageMenu.querySelectorAll('a');
            languageToggle.addEventListener('click', function (e) {
                e.preventDefault();
                languageMenu.style.display = languageMenu.style.display === 'block' ? 'none' : 'block';
            });
            languageLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    const lang = this.getAttribute('data-lang');
                    localStorage.setItem('selectedLanguage', lang);
                    currentLang = lang;
                    document.cookie = `googtrans=/tr/${lang}; path=/`;
                    const translateSelect = document.querySelector('#google_translate_element select.goog-te-combo');
                    if (translateSelect) {
                        translateSelect.value = lang;
                        translateSelect.dispatchEvent(new Event('change'));
                    }
                    languageMenu.style.display = 'none';
                });
            });
            document.addEventListener('click', function (e) {
                if (!languageToggle.contains(e.target) && !languageMenu.contains(e.target)) {
                    languageMenu.style.display = 'none';
                }
            });

            // "MENÜ" linki için scroll davranışı
            const menuLink = document.querySelector('a[href="/blog#products"]');
            if (menuLink) {
                menuLink.addEventListener('click', function (e) {
                    e.preventDefault();
                    const targetUrl = '/blog';
                    const targetSection = 'products';
                    if (window.location.pathname !== targetUrl) {
                        window.location.href = targetUrl + '#' + targetSection;
                    } else {
                        const targetElement = document.getElementById(targetSection);
                        if (targetElement) {
                            targetElement.scrollIntoView({ behavior: 'smooth' });
                        } else {
                            console.error('Hedef bulunamadı: #' + targetSection);
                        }
                    }
                });
            }
        });
    </script>
    <script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>

    <section id="products" class="container my-5">
        <h2 class="text-center mb-4">Menümüz</h2>
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @if (products.Any())
            {
                foreach (var product in products)
                {
                    var productName = product.HasValue("urunAdi") ? product.Value<string>("urunAdi") : "Ürün Adı Yok";
                    var productImage = product.HasValue("urunResmi") ? product.Value<IPublishedContent>("urunResmi") : null;
                    var productImageUrl = productImage != null ? productImage.Url() : "/images/placeholder.jpg";
                    var description = product.HasValue("aciklama") ? RemoveHtmlTags(product.Value<string>("aciklama")) : "Açıklama yok.";
                    var price = product.HasValue("fiyat") ? product.Value<decimal>("fiyat").ToString("F2") : "Fiyat Yok";
                    <div class="col">
                        <div class="card h-100 shadow-sm">
                            <img src="@productImageUrl" class="card-img-top product-img" alt="@productName">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@productName</h5>
                                <p class="card-text flex-grow-1">@description</p>
                                <p class="card-text fw-bold">Fiyat: @price TL</p>
                                <button class="btn btn-primary mt-auto order-btn" data-product="@productName">Sipariş Ver</button>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center text-warning">Henüz ürün eklenmemiş. Lütfen daha sonra tekrar kontrol edin!</p>
            }
        </div>
    </section>

    <div class="modal fade" id="orderModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="orderForm">
                        <div class="mb-3">
                            <label class="form-label">Kahvenizi Özelleştirin:</label><br>
                            <div id="ekstraSeceneklerContainer"></div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" id="submitOrder">Sipariş Ver</button>
                </div>
            </div>
        </div>
    </div>

    <div id="orderSuccess" class="order-success">
        <h3>Tebrikler!</h3>
        <p>Siparişiniz alındı. Kahveniz hazırlanıyor! ☕</p>
        <button class="close-btn" onclick="document.getElementById('orderSuccess').classList.remove('show')">Tamam</button>
    </div>

    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <h5><span class="notranslate">Kahretto</span></h5>
                    <p>2010’dan beri kahve tutkunlarına hizmet veriyoruz.</p>
                </div>
                <div class="col-md-4">
                    <h5>Hızlı Erişim</h5>
                    <ul class="list-unstyled">
                        <li><a href="/#bilgi1">Hakkımızda</a></li>
                        <li><a href="/iletisim">İletişim</a></li>
                        <li><a href="/sss">Sıkça Sorulan Sorular</a></li>
                    </ul>
                </div>
                <div class="col-md-4">
                    <h5>Bizi Takip Edin</h5>
                    <p>
                        <a href="https://www.instagram.com/kahretto" target="_blank"><i class="fab fa-instagram"></i></a>
                        <a href="https://www.twitter.com/kahretto" target="_blank"><i class="fab fa-twitter"></i></a>
                        <a href="https://www.facebook.com/kahretto" target="_blank"><i class="fab fa-facebook"></i></a>
                    </p>
                </div>
            </div>
            <p class="text-center mt-4">© 2025 <span class="notranslate">Kahretto</span>. Tüm hakları saklıdır.</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script>
        const urunBilgileri = {
            @foreach (var product in products)
            {
                var productName = product.HasValue("urunAdi") ? product.Value<string>("urunAdi") : "Ürün Adı Yok";
                var urunEkstraSecenekler = product.HasValue("urunEkstraSecenekler") ? product.Value<IEnumerable<string>>("urunEkstraSecenekler") : new List<string>();
                <text>"@productName": {
                    "ekstraSecenekler": @Json.Serialize(urunEkstraSecenekler)
                },</text>
            }
        };

        document.querySelectorAll('.order-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const productName = this.getAttribute('data-product');
                if (!productName) {
                    console.error('Hata: Ürün adı (data-product) tanımlı değil.');
                    return;
                }
                document.getElementById('modalTitle').innerHTML = productName.replace('Kahretto', '<span class="notranslate">Kahretto</span>') + ' Siparişi';

                if (!urunBilgileri[productName]) {
                    alert(`Hata: ${productName} ürünü için bilgi bulunamadı. Lütfen tekrar deneyin.`);
                    console.error(`Ürün bilgisi bulunamadı: ${productName}`);
                    return;
                }

                const container = document.getElementById('ekstraSeceneklerContainer');
                if (!container) {
                    console.error('Hata: Ekstra seçenekler container’ı bulunamadı.');
                    return;
                }

                container.innerHTML = '';
                const secenekler = urunBilgileri[productName].ekstraSecenekler || [];
                if (secenekler.length > 0 && secenekler.every(secenek => secenek !== '')) {
                    secenekler.forEach((secenek, index) => {
                        const secenekId = `secenek-${index}-${productName.replace(/\s/g, '').toLowerCase()}`;
                        const input = document.createElement('input');
                        input.type = 'checkbox';
                        input.name = 'option';
                        input.value = secenek;
                        input.id = secenekId;
                        input.className = 'form-check-input';
                        const label = document.createElement('label');
                        label.htmlFor = secenekId;
                        label.className = 'form-check-label';
                        label.innerText = secenek;
                        const div = document.createElement('div');
                        div.className = 'form-check';
                        div.appendChild(input);
                        div.appendChild(label);
                        container.appendChild(div);
                    });
                } else {
                    container.innerHTML = '<p style="color: red;">Hata: Bu ürün için ekstra seçenek tanımlı değil veya boş. Lütfen Umbraco\'da kontrol edin.</p>';
                }

                const orderModal = new bootstrap.Modal(document.getElementById('orderModal'));
                orderModal.show();
            });
        });

        document.getElementById('submitOrder').addEventListener('click', function() {
            const selectedOptions = [];
            document.querySelectorAll('#ekstraSeceneklerContainer input:checked').forEach(input => {
                selectedOptions.push(input.value);
            });
            console.log('Seçilen Ekstra Seçenekler:', selectedOptions);
            document.getElementById('orderSuccess').classList.add('show');
            const orderModal = bootstrap.Modal.getInstance(document.getElementById('orderModal'));
            orderModal.hide();
        });
    </script>
    <style>
        .order-success {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #FFFFFF;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            z-index: 1050;
            text-align: center;
            width: 400px;
        }
        .order-success.show {
            display: block;
        }
        .close-btn {
            background-color: #006633;
            color: #FFFFFF;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }
        .close-btn:hover {
            background-color: #005c3a;
        }
        /* Starbucks tarzı MENÜ düzeni için stiller */
        .product-img {
            height: 200px;
            object-fit: cover;
            border-bottom: 1px solid #e0e0e0;
        }
        .card {
            border: none;
            border-radius: 10px;
            transition: transform 0.2s ease-in-out;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        .card-title {
            font-size: 1.25rem;
            font-weight: 700;
            color: #1a1a1a;
        }
        .card-text {
            font-size: 0.95rem;
            color: #4a4a4a;
        }
        .btn-primary {
            background-color: #006633;
            border-color: #006633;
            border-radius: 50px;
            padding: 8px 20px;
            font-weight: 600;
        }
        .btn-primary:hover {
            background-color: #004d29;
            border-color: #004d29;
        }
    </style>
</body>
</html>